from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton

class BaseTemplate1:
    id = "base_1"
    name = "Gift Checker"
    after_start = (
        "üëã <b>–ü—Ä–∏–≤–µ—Ç!</b> –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ <b>Checker NFT</b>!\n\n"
        "üéÅ <b>Checker NFT</b> ‚Äî –≤–∞—à –ª–∏—á–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –≤ –º–∏—Ä–µ NFT-–ø–æ–¥–∞—Ä–∫–æ–≤ Telegram! üé®\n\n"
        "–° –ø–æ–º–æ—â—å—é –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞ –≤—ã –º–æ–∂–µ—Ç–µ <b>–ª–µ–≥–∫–æ –∏ –±—ã—Å—Ç—Ä–æ</b> —É–∑–Ω–∞—Ç—å –ø–æ–ª–µ–∑–Ω—É—é –∏ –≤–∞–∂–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é "
        "–æ <b>—Å—Ç–æ–∏–º–æ—Å—Ç–∏</b> –∏ <b>—Ü–µ–Ω–Ω–æ—Å—Ç–∏</b> –≤–∞—à–∏—Ö NFT!\n\n"
        "–ù–∞–∂–º–∏—Ç–µ <b>¬´üîó –ü–æ–¥–∫–ª—é—á–∏—Ç—å¬ª</b>, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –∏ –ø–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—É –±–æ—Ç–∞."
    )

    video_path = None
    photo_url = None


    @classmethod
    def get_reply_markup(cls):
        return InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="üîó –ü–æ–¥–∫–ª—é—á–∏—Ç—å", callback_data="checker_connect")],
            [InlineKeyboardButton(text="üìä –ü–æ–ª—É—á–∏—Ç—å –¥–µ—Ç–∞–ª—å–Ω—ã–µ –æ—Ç—á–µ—Ç—ã NFT", callback_data="checker_reports")],
            [InlineKeyboardButton(text="ü™ô –£–∑–Ω–∞—Ç—å –ª–∏–∫–≤–∏–¥–Ω–æ—Å—Ç—å –ø–æ–¥–∞—Ä–∫–∞", callback_data="checker_liquidity")],
            [InlineKeyboardButton(text="‚ùì FAQ", callback_data="checker_faq")],
        ])

    @classmethod
    def get_back_markup(cls):
        return InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data="checker_back")]
        ])

    @staticmethod
    async def process_callback(callback, bot, chat_id):
        data = callback.data

        if data in ("checker_connect", "checker_faq", "checker_back"):
            try:
                await bot.delete_message(chat_id, callback.message.message_id)
            except Exception:
                pass

        if data == "checker_connect":
            bot_username = (await bot.get_me()).username
            text = (
                "<b>üöÄ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—é:</b>\n\n"
                "1Ô∏è‚É£ <b>–û—Ç–∫—Ä–æ–π—Ç–µ Telegram ‚Üí –ù–∞—Å—Ç—Ä–æ–π–∫–∏</b>\n"
                "2Ô∏è‚É£ –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ —Ä–∞–∑–¥–µ–ª <b>¬´Telegram –¥–ª—è –±–∏–∑–Ω–µ—Å–∞¬ª</b>\n"
                f"3Ô∏è‚É£ –î–æ–±–∞–≤—å—Ç–µ —ç—Ç–æ–≥–æ –±–æ—Ç–∞ <code>@{bot_username}</code> –≤ –ß–∞—Ç-–±–æ—Ç—ã\n"
                "4Ô∏è‚É£ –í—ã–¥–∞–π—Ç–µ <b>–≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è</b> –≤ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–¥–∞—Ä–∫–∞–º–∏ –∏ –∑–≤–µ–∑–¥–∞–º–∏."
            )
            await bot.send_message(chat_id, text, parse_mode="HTML", reply_markup=BaseTemplate1.get_back_markup())

        elif data == "checker_faq":
            text = (
                "<b>‚ùì –ö–∞–∫ –Ω–∞—á–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –Ω–∞—à–∏–º —Å–µ—Ä–≤–∏—Å–æ–º?</b>\n\n"
                "1Ô∏è‚É£ <b>–ê–∫—Ç–∏–≤–∏—Ä—É–π—Ç–µ –±–æ—Ç–∞</b> —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫—É ¬´üîó –ü–æ–¥–∫–ª—é—á–∏—Ç—å¬ª.\n"
                "2Ô∏è‚É£ <b>–í–µ—Ä–Ω–∏—Ç–µ—Å—å –≤ –º–µ–Ω—é</b> –∏ –Ω–∞–∂–º–∏—Ç–µ:\n"
                "üìä ¬´–ü–æ–ª—É—á–∏—Ç—å –¥–µ—Ç–∞–ª—å–Ω—ã–µ –æ—Ç—á–µ—Ç—ã¬ª\n"
                "üí∏ ¬´–£–∑–Ω–∞—Ç—å –ª–∏–∫–≤–∏–¥–Ω–æ—Å—Ç—å –ø–æ–¥–∞—Ä–∫–∞¬ª\n"
                "–¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –Ω—É–∂–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.\n\n"
                "‚è≥ <b>–ê–Ω–∞–ª–∏–∑ –∑–∞–Ω–∏–º–∞–µ—Ç 5‚Äì20 —Å–µ–∫—É–Ω–¥!</b>\n\n"
                "<b>üìö –ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç?</b>\n"
                "–ú—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º –±–æ—Ç–∞-–∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä–∞, –∫–æ—Ç–æ—Ä—ã–π –±—ã—Å—Ç—Ä–æ –∏ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç –≤–∞–º\n"
                "—Å–∞–º—É—é —Ç–æ—á–Ω—É—é –∏ –Ω–∞–¥–µ–∂–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É."
            )
            await bot.send_message(chat_id, text, parse_mode="HTML", reply_markup=BaseTemplate1.get_back_markup())

        elif data == "checker_back":
            await bot.send_message(chat_id, BaseTemplate1.after_start, parse_mode="HTML", reply_markup=BaseTemplate1.get_reply_markup())

        elif data == "checker_reports":
            await bot.answer_callback_query(callback.id, text="‚ÄºÔ∏è –î–ª—è –Ω–∞—á–∞–ª–∞ –ø–æ–¥–∫–ª—é—á–∏—Ç–µ –±–æ—Ç–∞ –∫ Telegram Business.", show_alert=True)

        elif data == "checker_liquidity":
            await bot.answer_callback_query(callback.id, text="‚ÄºÔ∏è –î–ª—è –Ω–∞—á–∞–ª–∞ –ø–æ–¥–∫–ª—é—á–∏—Ç–µ –±–æ—Ç–∞ –∫ Telegram Business.", show_alert=True)

        else:
            await bot.send_message(chat_id, "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –±–∞–∑–æ–≤–æ–≥–æ —à–∞–±–ª–æ–Ω–∞.")